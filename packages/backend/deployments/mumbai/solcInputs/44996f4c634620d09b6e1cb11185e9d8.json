{
  "language": "Solidity",
  "sources": {
    "contracts/DArchive.sol": {
      "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ncontract DArchive {\n    event ArchiveAdded(\n        string contentID,\n        string contentURL,\n        string title,\n        uint256 timestamp\n    );\n    mapping(string => bool) public archiveAdded;\n\n    constructor() {}\n\n    function addArchive(\n        string calldata contentID,\n        string calldata contentURL,\n        string calldata title\n    ) public {\n        require(archiveAdded[contentID] == false, \"Archive already exists\");\n        emit ArchiveAdded(contentID, contentURL, title, block.timestamp);\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": ["ast"]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}
