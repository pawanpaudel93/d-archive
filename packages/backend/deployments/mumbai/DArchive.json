{
  "address": "0x66F1E51E042Ec4B7f8E1c4532C48aE7d3a55eC47",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trustedForwarder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "supporterNFTAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "contentID",
          "type": "string"
        }
      ],
      "name": "AlreadyArchived",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "contentID",
          "type": "string"
        }
      ],
      "name": "ArchiveAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "contentID",
          "type": "string"
        }
      ],
      "name": "addArchive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "archiveAdded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTrustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "setSupporterTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trustedForwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "support",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supporterNFT",
      "outputs": [
        {
          "internalType": "contract ISupporterNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0aa8f4a0456ca19f4deae5caafd75c825280dd0118de55769289abc3e86dec95",
  "receipt": {
    "to": null,
    "from": "0xF5c112997fe4Ca52abe1acC9552C64666EF5C8e1",
    "contractAddress": "0x66F1E51E042Ec4B7f8E1c4532C48aE7d3a55eC47",
    "transactionIndex": 11,
    "gasUsed": "668882",
    "logsBloom": "0x
    "blockHash": "0xd9d59ad1cfd48548869524188e59f10e4283c539a2a3878435b1c1e6ef753157",
    "transactionHash": "0x0aa8f4a0456ca19f4deae5caafd75c825280dd0118de55769289abc3e86dec95",
    "logs": [
      {
        "transactionIndex": 11,
        "blockNumber": 27725585,
        "transactionHash": "0x0aa8f4a0456ca19f4deae5caafd75c825280dd0118de55769289abc3e86dec95",
        "address": "0x66F1E51E042Ec4B7f8E1c4532C48aE7d3a55eC47",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f5c112997fe4ca52abe1acc9552c64666ef5c8e1"
        ],
        "data": "0x",
        "logIndex": 108,
        "blockHash": "0xd9d59ad1cfd48548869524188e59f10e4283c539a2a3878435b1c1e6ef753157"
      },
      {
        "transactionIndex": 11,
        "blockNumber": 27725585,
        "transactionHash": "0x0aa8f4a0456ca19f4deae5caafd75c825280dd0118de55769289abc3e86dec95",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000f5c112997fe4ca52abe1acc9552c64666ef5c8e1",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000051175c966c357a0000000000000000000000000000000000000000000000007ecf05d99b80a01900000000000000000000000000000000000000000000084c7783101ed7f5300b0000000000000000000000000000000000000000000000007e7dee7d05146a9f00000000000000000000000000000000000000000000084c77d4277b6e616585",
        "logIndex": 109,
        "blockHash": "0xd9d59ad1cfd48548869524188e59f10e4283c539a2a3878435b1c1e6ef753157"
      }
    ],
    "blockNumber": 27725585,
    "cumulativeGasUsed": "4405645",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
    "0x9b58eeEaA99F9bbCE0C704Dce70Ee6dC37BeaB33"
  ],
  "numDeployments": 3,
  "solcInputHash": "2c0ed3ff284209e81ce89da384d0873c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"supporterNFTAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentID\",\"type\":\"string\"}],\"name\":\"AlreadyArchived\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contentID\",\"type\":\"string\"}],\"name\":\"ArchiveAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentID\",\"type\":\"string\"}],\"name\":\"addArchive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"archiveAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setSupporterTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"support\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supporterNFT\",\"outputs\":[{\"internalType\":\"contract ISupporterNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getTrustedForwarder()\":{\"returns\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"}},\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTrustedForwarder()\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\"},\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DArchive.sol\":\"DArchive\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/ERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable no-inline-assembly\\npragma solidity >=0.6.9;\\n\\nimport \\\"./interfaces/IERC2771Recipient.sol\\\";\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Implementation\\n *\\n * @notice Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.\\n *\\n * @notice A base contract to be inherited by any contract that want to receive relayed transactions.\\n *\\n * @notice A subclass must use `_msgSender()` instead of `msg.sender`.\\n */\\nabstract contract ERC2771Recipient is IERC2771Recipient {\\n\\n    /*\\n     * Forwarder singleton we accept calls from\\n     */\\n    address private _trustedForwarder;\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @notice Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\\n     * @return forwarder The address of the Forwarder contract that is being used.\\n     */\\n    function getTrustedForwarder() public virtual view returns (address forwarder){\\n        return _trustedForwarder;\\n    }\\n\\n    function _setTrustedForwarder(address _forwarder) internal {\\n        _trustedForwarder = _forwarder;\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function isTrustedForwarder(address forwarder) public virtual override view returns(bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function _msgSender() internal override virtual view returns (address ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            // At this point we know that the sender is a trusted forwarder,\\n            // so we trust that the last bytes of msg.data are the verified sender address.\\n            // extract sender address from the end of msg.data\\n            assembly {\\n                ret := shr(96,calldataload(sub(calldatasize(),20)))\\n            }\\n        } else {\\n            ret = msg.sender;\\n        }\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function _msgData() internal override virtual view returns (bytes calldata ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            return msg.data[0:msg.data.length-20];\\n        } else {\\n            return msg.data;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x77b3307c570c582969ea5466f296898ab9fea1f8b61b30f1c73345fe047a89a9\",\"license\":\"MIT\"},\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0;\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Declarations\\n *\\n * @notice A contract must implement this interface in order to support relayed transaction.\\n *\\n * @notice It is recommended that your contract inherits from the ERC2771Recipient contract.\\n */\\nabstract contract IERC2771Recipient {\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @param forwarder The address of the Forwarder contract that is being used.\\n     * @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\\n     * @return sender The real sender of this call.\\n     * For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\\n     * Otherwise simply returns `msg.sender`.\\n     */\\n    function _msgSender() internal virtual view returns (address);\\n\\n    /**\\n     * @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\\n     * @return data The real `msg.data` of this call.\\n     * For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\\n     * of the `msg.data` - so this method will strip those 20 bytes off.\\n     * Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`.\\n     */\\n    function _msgData() internal virtual view returns (bytes calldata);\\n}\\n\",\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/DArchive.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@opengsn/contracts/src/ERC2771Recipient.sol\\\";\\n\\ninterface ISupporterNFT {\\n    function safeMint(address to) external;\\n\\n    function setSupporterTokenURI(string memory uri) external;\\n\\n    function burn(uint256 tokenId) external;\\n\\n    function revoke(uint256 tokenId) external;\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n}\\n\\ncontract DArchive is ERC2771Recipient, Ownable {\\n    event ArchiveAdded(string contentID);\\n    error AlreadyArchived(string contentID);\\n\\n    mapping(string => bool) public archiveAdded;\\n    ISupporterNFT public supporterNFT;\\n\\n    constructor(address _trustedForwarder, address supporterNFTAddress) {\\n        _setTrustedForwarder(_trustedForwarder);\\n        supporterNFT = ISupporterNFT(supporterNFTAddress);\\n    }\\n\\n    function addArchive(string calldata contentID) public {\\n        if (archiveAdded[contentID]) {\\n            revert AlreadyArchived(contentID);\\n        }\\n        archiveAdded[contentID] = true;\\n        emit ArchiveAdded(contentID);\\n    }\\n\\n    function setTrustedForwarder(address _trustedForwarder) public onlyOwner {\\n        _setTrustedForwarder(_trustedForwarder);\\n    }\\n\\n    function _msgSender()\\n        internal\\n        view\\n        override(Context, ERC2771Recipient)\\n        returns (address sender)\\n    {\\n        sender = ERC2771Recipient._msgSender();\\n    }\\n\\n    function _msgData()\\n        internal\\n        view\\n        override(Context, ERC2771Recipient)\\n        returns (bytes calldata)\\n    {\\n        return ERC2771Recipient._msgData();\\n    }\\n\\n    function versionRecipient() external pure returns (string memory) {\\n        return \\\"2.2.0\\\";\\n    }\\n\\n    function setSupporterTokenURI(string memory uri) public onlyOwner {\\n        supporterNFT.setSupporterTokenURI(uri);\\n    }\\n\\n    function revoke(uint256 tokenId) external onlyOwner {\\n        supporterNFT.revoke(tokenId);\\n    }\\n\\n    function withdraw(uint256 amount) external onlyOwner {\\n        if (address(this).balance >= amount) {\\n            (bool sent, ) = msg.sender.call{value: amount}(\\\"\\\");\\n            require(sent, \\\"Failed to send Ether\\\");\\n        }\\n    }\\n\\n    function _mint(address to) internal {\\n        if (supporterNFT.balanceOf(to) == 0) {\\n            supporterNFT.safeMint(to);\\n        }\\n    }\\n\\n    function support() external payable {\\n        _mint(msg.sender);\\n    }\\n\\n    receive() external payable {\\n        _mint(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x6418278af58ffe301a538d4fd5009a1ee24c6e6163f949d9c9ffeb0f96fd5157\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610b38380380610b3883398101604081905261002f9161012b565b61003f61003a610070565b610089565b600080546001600160a01b039384166001600160a01b0319918216179091556003805492909316911617905561015e565b60006100846100db60201b6106581760201c565b905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000601436108015906100f857506000546001600160a01b031633145b1561010a575060131936013560601c90565b503390565b80516001600160a01b038116811461012657600080fd5b919050565b6000806040838503121561013e57600080fd5b6101478361010f565b91506101556020840161010f565b90509250929050565b6109cb8061016d6000396000f3fe6080604052600436106100e15760003560e01c80638da5cb5b1161007f578063da74222811610059578063da7422281461027a578063db6398c61461029a578063f2fde38b146102ba578063f31fecc9146102da57600080fd5b80638da5cb5b146101ef578063cc82cf8714610221578063ce1b815f1461025c57600080fd5b8063486ff0cd116100bb578063486ff0cd1461013e5780634b6a0c311461017b578063572b6c051461019b578063715018a6146101da57600080fd5b8063119f8747146100f657806320c5429b146100fe5780632e1a7d4d1461011e57600080fd5b366100f1576100ef336102fa565b005b600080fd5b6100ef6103d0565b34801561010a57600080fd5b506100ef610119366004610766565b6103db565b34801561012a57600080fd5b506100ef610139366004610766565b610414565b34801561014a57600080fd5b5060408051808201825260058152640322e322e360dc1b60208201529051610172919061077f565b60405180910390f35b34801561018757600080fd5b506100ef6101963660046107ea565b6104bb565b3480156101a757600080fd5b506101ca6101b636600461089b565b6000546001600160a01b0391821691161490565b6040519015158152602001610172565b3480156101e657600080fd5b506100ef6104f3565b3480156101fb57600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610172565b34801561022d57600080fd5b506101ca61023c3660046107ea565b805160208183018101805160028252928201919093012091525460ff1681565b34801561026857600080fd5b506000546001600160a01b0316610209565b34801561028657600080fd5b506100ef61029536600461089b565b610505565b3480156102a657600080fd5b506100ef6102b53660046108cb565b61052b565b3480156102c657600080fd5b506100ef6102d536600461089b565b6105e2565b3480156102e657600080fd5b50600354610209906001600160a01b031681565b6003546040516370a0823160e01b81526001600160a01b038381166004830152909116906370a0823190602401602060405180830381865afa158015610344573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610368919061093d565b6103cd576003546040516340d097c360e01b81526001600160a01b038381166004830152909116906340d097c3906024015b600060405180830381600087803b1580156103b457600080fd5b505af11580156103c8573d6000803e3d6000fd5b505050505b50565b6103d9336102fa565b565b6103e361068c565b6003546040516320c5429b60e01b8152600481018390526001600160a01b03909116906320c5429b9060240161039a565b61041c61068c565b8047106103cd57604051600090339083908381818185875af1925050503d8060008114610465576040519150601f19603f3d011682016040523d82523d6000602084013e61046a565b606091505b50509050806104b75760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064015b60405180910390fd5b5050565b6104c361068c565b600354604051634b6a0c3160e01b81526001600160a01b0390911690634b6a0c319061039a90849060040161077f565b6104fb61068c565b6103d96000610705565b61050d61068c565b600080546001600160a01b0319166001600160a01b03831617905550565b6002828260405161053d929190610956565b9081526040519081900360200190205460ff161561057257818160405163f559f28f60e01b81526004016104ae929190610966565b600160028383604051610586929190610956565b908152604051908190036020018120805492151560ff19909316929092179091557f376ebb7b46b0a9d054010a577effbc5f0465a50e29441074c44bfd8b8aaa5530906105d69084908490610966565b60405180910390a15050565b6105ea61068c565b6001600160a01b03811661064f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ae565b6103cd81610705565b60006014361080159061067557506000546001600160a01b031633145b15610687575060131936013560601c90565b503390565b610694610757565b6001600160a01b03166106af6001546001600160a01b031690565b6001600160a01b0316146103d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ae565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610761610658565b905090565b60006020828403121561077857600080fd5b5035919050565b600060208083528351808285015260005b818110156107ac57858101830151858201604001528201610790565b818111156107be576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156107fc57600080fd5b813567ffffffffffffffff8082111561081457600080fd5b818401915084601f83011261082857600080fd5b81358181111561083a5761083a6107d4565b604051601f8201601f19908116603f01168101908382118183101715610862576108626107d4565b8160405282815287602084870101111561087b57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156108ad57600080fd5b81356001600160a01b03811681146108c457600080fd5b9392505050565b600080602083850312156108de57600080fd5b823567ffffffffffffffff808211156108f657600080fd5b818501915085601f83011261090a57600080fd5b81358181111561091957600080fd5b86602082850101111561092b57600080fd5b60209290920196919550909350505050565b60006020828403121561094f57600080fd5b5051919050565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea2646970667358221220c3bd61dd6e45225792d35c62d1ac7c5031b26b9658834bfd82bb95ad4b9d8c8564736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100e15760003560e01c80638da5cb5b1161007f578063da74222811610059578063da7422281461027a578063db6398c61461029a578063f2fde38b146102ba578063f31fecc9146102da57600080fd5b80638da5cb5b146101ef578063cc82cf8714610221578063ce1b815f1461025c57600080fd5b8063486ff0cd116100bb578063486ff0cd1461013e5780634b6a0c311461017b578063572b6c051461019b578063715018a6146101da57600080fd5b8063119f8747146100f657806320c5429b146100fe5780632e1a7d4d1461011e57600080fd5b366100f1576100ef336102fa565b005b600080fd5b6100ef6103d0565b34801561010a57600080fd5b506100ef610119366004610766565b6103db565b34801561012a57600080fd5b506100ef610139366004610766565b610414565b34801561014a57600080fd5b5060408051808201825260058152640322e322e360dc1b60208201529051610172919061077f565b60405180910390f35b34801561018757600080fd5b506100ef6101963660046107ea565b6104bb565b3480156101a757600080fd5b506101ca6101b636600461089b565b6000546001600160a01b0391821691161490565b6040519015158152602001610172565b3480156101e657600080fd5b506100ef6104f3565b3480156101fb57600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610172565b34801561022d57600080fd5b506101ca61023c3660046107ea565b805160208183018101805160028252928201919093012091525460ff1681565b34801561026857600080fd5b506000546001600160a01b0316610209565b34801561028657600080fd5b506100ef61029536600461089b565b610505565b3480156102a657600080fd5b506100ef6102b53660046108cb565b61052b565b3480156102c657600080fd5b506100ef6102d536600461089b565b6105e2565b3480156102e657600080fd5b50600354610209906001600160a01b031681565b6003546040516370a0823160e01b81526001600160a01b038381166004830152909116906370a0823190602401602060405180830381865afa158015610344573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610368919061093d565b6103cd576003546040516340d097c360e01b81526001600160a01b038381166004830152909116906340d097c3906024015b600060405180830381600087803b1580156103b457600080fd5b505af11580156103c8573d6000803e3d6000fd5b505050505b50565b6103d9336102fa565b565b6103e361068c565b6003546040516320c5429b60e01b8152600481018390526001600160a01b03909116906320c5429b9060240161039a565b61041c61068c565b8047106103cd57604051600090339083908381818185875af1925050503d8060008114610465576040519150601f19603f3d011682016040523d82523d6000602084013e61046a565b606091505b50509050806104b75760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064015b60405180910390fd5b5050565b6104c361068c565b600354604051634b6a0c3160e01b81526001600160a01b0390911690634b6a0c319061039a90849060040161077f565b6104fb61068c565b6103d96000610705565b61050d61068c565b600080546001600160a01b0319166001600160a01b03831617905550565b6002828260405161053d929190610956565b9081526040519081900360200190205460ff161561057257818160405163f559f28f60e01b81526004016104ae929190610966565b600160028383604051610586929190610956565b908152604051908190036020018120805492151560ff19909316929092179091557f376ebb7b46b0a9d054010a577effbc5f0465a50e29441074c44bfd8b8aaa5530906105d69084908490610966565b60405180910390a15050565b6105ea61068c565b6001600160a01b03811661064f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ae565b6103cd81610705565b60006014361080159061067557506000546001600160a01b031633145b15610687575060131936013560601c90565b503390565b610694610757565b6001600160a01b03166106af6001546001600160a01b031690565b6001600160a01b0316146103d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ae565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610761610658565b905090565b60006020828403121561077857600080fd5b5035919050565b600060208083528351808285015260005b818110156107ac57858101830151858201604001528201610790565b818111156107be576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156107fc57600080fd5b813567ffffffffffffffff8082111561081457600080fd5b818401915084601f83011261082857600080fd5b81358181111561083a5761083a6107d4565b604051601f8201601f19908116603f01168101908382118183101715610862576108626107d4565b8160405282815287602084870101111561087b57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156108ad57600080fd5b81356001600160a01b03811681146108c457600080fd5b9392505050565b600080602083850312156108de57600080fd5b823567ffffffffffffffff808211156108f657600080fd5b818501915085601f83011261090a57600080fd5b81358181111561091957600080fd5b86602082850101111561092b57600080fd5b60209290920196919550909350505050565b60006020828403121561094f57600080fd5b5051919050565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea2646970667358221220c3bd61dd6e45225792d35c62d1ac7c5031b26b9658834bfd82bb95ad4b9d8c8564736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getTrustedForwarder()": {
        "returns": {
          "forwarder": "The address of the Forwarder contract that is being used."
        }
      },
      "isTrustedForwarder(address)": {
        "params": {
          "forwarder": "The address of the Forwarder contract that is being used."
        },
        "returns": {
          "_0": "isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getTrustedForwarder()": {
        "notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet."
      },
      "isTrustedForwarder(address)": {
        "notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/DArchive.sol:DArchive",
        "label": "_trustedForwarder",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 134,
        "contract": "contracts/DArchive.sol:DArchive",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2093,
        "contract": "contracts/DArchive.sol:DArchive",
        "label": "archiveAdded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 2096,
        "contract": "contracts/DArchive.sol:DArchive",
        "label": "supporterNFT",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ISupporterNFT)2077"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ISupporterNFT)2077": {
        "encoding": "inplace",
        "label": "contract ISupporterNFT",
        "numberOfBytes": "20"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}